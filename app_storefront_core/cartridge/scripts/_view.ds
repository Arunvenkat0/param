'use strict';

/**
 * Get the decorator templates which is typically the passed template but in case of an AJAX request it is
 * an empty decorator
 *
 * @param decoratorName {String} the name of the decorator template to use
 * @param  customValues {Array} Array of parameter values for 'format' which indicate an AJAX response
 * @return {String} The name of the decorator template to be used
 */
exports.decorate = function(decoratorName, customValues){
    var pageFormat = request.httpParameters.format && request.httpParameters.format.length && request.httpParameters.format[0];

    var noDecoration = ['ajax'];

    if (noDecoration.indexOf(pageFormat) > -1 && (!customValues || customValues.indexOf(pageFormat) > -1)) {
        decoratorName = 'util/pt_empty';
    }
    return decoratorName;
};

/**
 * Get a view for the given Name
 *
 * @param  {string} viewName   The name of the view
 * @param  {object} parameters The parameters to pass to the view
 * @return {object/View}       The view object instance
 */
exports.get = function (viewName, parameters) {
    var View;
    try {
        View = require('./view/' + viewName + 'View');
    } catch (e) {
        View = require('./view/View');
    }
    return new View(parameters || {});
};
