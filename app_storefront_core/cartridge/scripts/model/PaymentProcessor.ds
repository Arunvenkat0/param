'use strict';

/** @module model/PaymentProcessor */
var Class = require('~/cartridge/scripts/util/Class').Class;
var HookMgr = require('dw/system/HookMgr');
var PaymentMgr = require('dw/order/PaymentMgr');

/**
 * TODO
 *
 * @class module:model/PaymentProcessor~PaymentProcessor
 */
var PaymentProcessor = Class.extend({
    /** @lends module:model/PaymentProcessor~PaymentProcessor.prototype */
});

/**
 * TODO
 * @param cart
 * @param paymentMethodID
 * @returns {*}
 */
PaymentProcessor.handle = function (cart, paymentMethodID) {
    var processor = PaymentMgr.getPaymentMethod(paymentMethodID).getPaymentProcessor();
    if (dw.system.HookMgr.hasHook('app.payment.processor.' + processor.ID)){
        return dw.system.HookMgr.callHook('app.payment.processor.' + processor.ID, 'Handle', {
            Basket : cart
        });
    }
    else {
        return dw.system.HookMgr.callHook('app.payment.processor.default', 'Handle', {
            Basket : cart
        });
    }
};

/**
 * TODO
 *
 * @param order
 * @param paymentInstrument
 * @returns {*}
 */
PaymentProcessor.authorize = function (order, paymentInstrument) {
    var processor = PaymentMgr.getPaymentMethod(paymentInstrument.getPaymentMethod()).getPaymentProcessor();
    if (HookMgr.hasHook('app.payment.processor.' + processor.ID)){
        return HookMgr.callHook('app.payment.processor.' + processor.ID, 'Authorize', {
            OrderNo           : order.getOrderNo(),
            PaymentInstrument : paymentInstrument
        });
    }
    else {
        return HookMgr.callHook('app.payment.processor.default', 'Authorize', {
            OrderNo           : order.getOrderNo(),
            PaymentInstrument : paymentInstrument
        });
    }
};

/** The PaymentProcessor class */
module.exports = PaymentProcessor;
