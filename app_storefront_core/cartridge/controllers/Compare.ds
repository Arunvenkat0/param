'use strict';

/**
 * Creating, modifying and showing of a product comparison.
 * @module controllers/Compare
 */

/* API Includes */
var Category = require('~/cartridge/scripts/models/Category');
var Form = require('~/cartridge/scripts/models/Form');
var Product = require('~/cartridge/scripts/models/Product');

/* Script Modules */
var guard = require('~/cartridge/scripts/guard');
var view = require('~/cartridge/scripts/view');

/**
 * Expects: - category: category ID
 */
function Show() {
    var compareForm = session.forms.compare;

    var ScriptResult = new dw.system.Pipelet('Script', {
        ScriptFile    : 'catalog/GetCompareList.ds',
        Transactional : false
    }).execute({
            SelectedCategory : request.httpParameterMap.category.value
        });
    var CompareList = ScriptResult.CompareList;

    Form.get(compareForm).copyFrom(CompareList);
    compareForm.categories.setOptions(CompareList.categories);

    view.get({CompareList : CompareList}).render('product/compare/compareshow');
}

/**
 * Expects: - pid: SKU - category: category ID
 */
function AddProduct() {

    var product = Product.get(request.httpParameterMap.pid.value);
    var category = Category.get(request.httpParameterMap.category.value);

    if (!product.object || !category.object) {
        response.renderJSON({
            success : false
        });
        return;
    }
    else {

        var ScriptResult = new dw.system.Pipelet('Script', {
            Transactional : false,
            OnError       : 'PIPELET_ERROR',
            ScriptFile    : 'catalog/AddToCompareList.ds'
        }).execute({
                Category : category.object,
                Product  : product.object
            });

        if (ScriptResult.result === PIPELET_ERROR) {
            response.renderJSON({
                success : false
            });
            return;
        }

        response.renderJSON({
            success : true
        });
    }
}

/**
 * Parameters: - pid: SKU - category: category ID
 */
function RemoveProduct() {

    var product = Product.get(request.httpParameterMap.pid.value);
    var category = Category.get(request.httpParameterMap.category.value);
    if (!product.object || !category.object) {
        response.renderJSON({
            success : false
        });
        return;
    }
    else {

        var ScriptResult = new dw.system.Pipelet('Script', {
            ScriptFile    : 'catalog/RemoveFromCompareList.ds',
            Transactional : false
        }).execute({
                Product  : product.object,
                Category : category.object
            });
        if (ScriptResult.result === PIPELET_ERROR) {
            response.renderJSON({
                success : false
            });
            return;
        }

        response.renderJSON({
            success : true
        });
    }
}

/**
 * Parameters: - category: category ID
 */
function Controls() {

    var category = Category.get(request.httpParameterMap.category.value);
    if (!category.object) {
        view.get().render('search/components/productcomparewidget');
        return;
    }
    else {

        var ScriptResult = new dw.system.Pipelet('Script', {
            ScriptFile    : 'catalog/GetCompareList.ds',
            Transactional : false
        }).execute({
                SelectedCategory : request.httpParameterMap.category.value
            });
        if (ScriptResult.result === PIPELET_ERROR) {
            response.renderTemplate('search/components/productcomparewidget');
            return;
        }
        var CompareList = ScriptResult.CompareList;

        view.get({CompareList : CompareList, Category : category.object}).render('search/components/productcomparewidget');
    }
}

/*
 * Module exports
 */

/*
 * Web exposed methods
 */
/** @see module:controllers/Compare~Show */
exports.Show = guard.all(Show);
/** @see module:controllers/Compare~AddProduct */
exports.AddProduct = guard.ensure(['get'], AddProduct);
/** @see module:controllers/Compare~RemoveProduct */
exports.RemoveProduct = guard.ensure(['get'], RemoveProduct);
/** @see module:controllers/Compare~Controls */
exports.Controls = guard.ensure(['get'], Controls);
