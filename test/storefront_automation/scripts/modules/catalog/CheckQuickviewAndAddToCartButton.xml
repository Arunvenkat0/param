<?xml version="1.0" encoding="UTF-8" ?>
<scriptmodule version="3" xmlns="http://xlt.xceptance.com/xlt-script/2">
  <description>Checks some basic features of the quickview. Checks if the add-to-cart-button is disabled initially and is enabled after selecting color and size.</description>
  <module name="library.function.FAssertElementPresent">
    <parameter name="assertedElement" value="css=#add-to-cart[disabled]"/>
  </module>
  <command name="assertElementPresent" disabled="true" target="css=#add-to-cart[disabled]">
    <comment>Check for the disabled add to cart button.</comment>
  </command>
  <module name="library.function.FWaitForElement">
    <parameter name="element" value="css= .size:first-child :not(.unselectable) .swatchanchor"/>
  </module>
  <command name="storeText" target="css= .size:first-child :not(.unselectable) .swatchanchor" value="ProductSize"/>
  <module name="library.function.FWaitForElement">
    <parameter name="element" value="css=.Color:first-child :not(.unselectable) .swatchanchor"/>
  </module>
  <command name="storeText" target="css=.Color:first-child :not(.unselectable) .swatchanchor" value="ProductColor"/>
  <action name="CheckSelectedColor"/>
  <module name="library.function.FWaitForElement">
    <parameter name="element" value="css=.Color:first-child :not(.unselectable) a[title='${ProductColor}']"/>
  </module>
  <module name="library.function.FClick">
    <parameter name="clickElement" value="css=.Color:first-child :not(.unselectable) a[title='${ProductColor}']"/>
  </module>
  <command name="click" disabled="true" target="css=.Color:first-child :not(.unselectable) a[title='${ProductColor}']">
    <comment>Pick a size.</comment>
  </command>
  <command name="waitForElementPresent" target="css=.Color .selected .swatchanchor"/>
  <module name="library.function.FWaitForText">
    <parameter name="textElement" value="css=.Color .selected-value"/>
    <parameter name="text" value="${ProductColor}"/>
  </module>
  <command name="waitForText" disabled="true" target="css=.Color .selected-value" value="${ProductColor}">
    <comment>Wait for the color title to appear next to the swatches.</comment>
  </command>
  <command name="assertNotElementPresent" target="css=.size .selected">
    <comment>Check if no size is selected yet.</comment>
  </command>
  <action name="SelectSize"/>
  <module name="library.function.FClick">
    <parameter name="clickElement" value="css=.size:first-child :not(.unselectable) a[title='${ProductSize}']"/>
  </module>
  <command name="click" disabled="true" target="css=.size:first-child :not(.unselectable) a[title='${ProductSize}']">
    <comment>Pick a size.</comment>
  </command>
  <command name="pause" disabled="true" value="1000"/>
  <module name="library.function.FWaitForTextCaseInsensitive">
    <parameter name="textElement" value="css=.size .selected-value"/>
    <parameter name="plainString" value="${ProductSize}"/>
  </module>
  <command name="waitForElementPresent" disabled="true" target="css=.size .selected-value">
    <comment>Check if size has been selected.</comment>
  </command>
  <command name="waitForText" disabled="true" target="css=.size .selected-value" value="${ProductSize}"/>
  <command name="waitForNotElementPresent" target="css=#add-to-cart[disabled]">
    <comment>Check for the enabled add to cart button.</comment>
  </command>
</scriptmodule>
