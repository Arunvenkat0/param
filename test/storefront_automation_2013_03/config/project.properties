################################################################################
#
# Test Run Specific Settings
#
# Use this section to configure an (optional) file which contains the settings
# specific to a certain load test run. This is useful to externalize the
# definition of a certain load profile or a set of test conditions. This way,
# many of these configurations can be defined and prepared in advance and used
# as needed. For example, to switch to another load profile, just name the
# respective properties file.
#
################################################################################

## The file with test run specific settings.
com.xceptance.xlt.testPropertiesFile = test.properties

################################################################################
#
# Test Case Mapping
#
# Maps the test case class onto a load test name. The load test name will be
# referenced later in the load test configuration. You can map the same class
# to multiple load test names if needed.
#
################################################################################

## Java test cases using the HtmlUnit API and the action concept.
com.xceptance.xlt.loadtests.TPurchaseAsGuest.class = com.xceptance.xlt.samples.tests.TVisitor

## Java test cases using the WebDriver API.
com.xceptance.xlt.loadtests.TWebDriverVisitor.class = com.xceptance.xlt.samples.tests.webdriver.TVisitor
com.xceptance.xlt.loadtests.TWebDriverJSVisitor.class = com.xceptance.xlt.samples.tests.webdriver.TJSVisitor
com.xceptance.xlt.loadtests.TWebDriverAuthor.class = com.xceptance.xlt.samples.tests.webdriver.TAuthor

## Ruby test cases using the HtmlUnit API and the action concept.
com.xceptance.xlt.loadtests.TRVisitor.class = com.xceptance.xlt.rubysamples.tests.TVisitor
com.xceptance.xlt.loadtests.TRAuthor.class = com.xceptance.xlt.rubysamples.tests.TAuthor
com.xceptance.xlt.loadtests.TRLWVisitor.class = com.xceptance.xlt.rubysamples.tests.TLWVisitor
com.xceptance.xlt.loadtests.TRSearchVisitor.class = com.xceptance.xlt.rubysamples.tests.TSearchVisitor
com.xceptance.xlt.loadtests.TRCrawler.class = com.xceptance.xlt.rubysamples.tests.TCrawler

## Script-based test cases.
com.xceptance.xlt.loadtests.TScriptAuthor.class = com.xceptance.xlt.samples.tests.scripting.TAuthor


################################################################################
#
# Test Specific Settings
#
# Prefix test case specific settings with the test class name.
#
################################################################################

##### General Settings (we refer to them by full property name) #####

blog-url = http://localhost:8080/pebble/

username = username
password = password

## The URL of the blog's home page.
com.xceptance.xlt.samples.tests.blog-url = ${blog-url}


##### TVisitor Options #####

## How many articles do we want to read? It might happen that we read the same one again
## and again if we do not have enough articles available.
com.xceptance.xlt.samples.tests.TVisitor.article-read-count = 2

## How often should we page before we read articles?
com.xceptance.xlt.samples.tests.TVisitor.paging-count = 2

## Randomize
com.xceptance.xlt.samples.tests.TVisitor.randomize = false

## How many articles do we want to read? It might happen that we read the same one again
## and again if we do not have enough articles available.
com.xceptance.xlt.samples.tests.webdriver.TVisitor.article-read-count = 2

## How often should we page before we read articles?
com.xceptance.xlt.samples.tests.webdriver.TVisitor.paging-count = 2

## Randomize
com.xceptance.xlt.samples.tests.webdriver.TVisitor.randomize = false


##### TRVisitor Options #####

## How many articles do we want to read? It might happen that we read the same one again
## and again if we do not have enough articles available.
com.xceptance.xlt.rubysamples.tests.TVisitor.article-read-count = 2

## How often should we page before we read articles?
com.xceptance.xlt.rubysamples.tests.TVisitor.paging-count = 2

## Randomize
com.xceptance.xlt.rubysamples.tests.TVisitor.randomize = false


##### TJSVisitor Options #####

## How many articles do we want to read? It might happen that we read the same one again
## and again if we do not have enough articles available.
com.xceptance.xlt.samples.tests.TJSVisitor.article-read-count = 2

## How often should we page before we read articles?
com.xceptance.xlt.samples.tests.TJSVisitor.paging-count = 2

## Randomize
com.xceptance.xlt.samples.tests.TJSVisitor.randomize = false

## How many articles do we want to read? It might happen that we read the same one again
## and again if we do not have enough articles available.
com.xceptance.xlt.samples.tests.webdriver.TJSVisitor.article-read-count = 2

## How often should we page before we read articles?
com.xceptance.xlt.samples.tests.webdriver.TJSVisitor.paging-count = 2

## Randomize
com.xceptance.xlt.samples.tests.webdriver.TJSVisitor.randomize = false


##### TLWVisitor Options #####

## How many articles do we want to read? It might happen that we read the same one again
## and again if we do not have enough articles available.
com.xceptance.xlt.samples.tests.TLWVisitor.article-read-count = 3

## How often should we page before we read articles?
com.xceptance.xlt.samples.tests.TLWVisitor.paging-count = 2

## Randomize
com.xceptance.xlt.samples.tests.TLWVisitor.randomize = true


##### TRLWVisitor Options #####

## How many articles do we want to read? It might happen that we read the same one again
## and again if we do not have enough articles available.
com.xceptance.xlt.rubysamples.tests.TLWVisitor.article-read-count = 3

## How often should we page before we read articles?
com.xceptance.xlt.rubysamples.tests.TLWVisitor.paging-count = 2

## Randomize
com.xceptance.xlt.rubysamples.tests.TLWVisitor.randomize = true


##### TAuthor Options #####

## Our user name and password to log on.
com.xceptance.xlt.samples.tests.TAuthor.username = ${username}
com.xceptance.xlt.samples.tests.TAuthor.password = ${password}

## How many articles do we want to write?
com.xceptance.xlt.samples.tests.TAuthor.write-count = 2

## Our user name and password to log on.
com.xceptance.xlt.samples.tests.webdriver.TAuthor.username = ${username}
com.xceptance.xlt.samples.tests.webdriver.TAuthor.password = ${password}

## How many articles do we want to write?
com.xceptance.xlt.samples.tests.webdriver.TAuthor.write-count = 2


##### TAuthor Options #####

## Our user name and password to log on.
com.xceptance.xlt.rubysamples.tests.TAuthor.username = ${username}
com.xceptance.xlt.rubysamples.tests.TAuthor.password = ${password}

## How many articles do we want to write?
com.xceptance.xlt.rubysamples.tests.TAuthor.write-count = 2

## Our user name and password to log on.
com.xceptance.xlt.rubysamples.tests.webdriver.TAuthor.username = ${username}
com.xceptance.xlt.rubysamples.tests.webdriver.TAuthor.password = ${password}

## How many articles do we want to write?
com.xceptance.xlt.rubysamples.tests.webdriver.TAuthor.write-count = 2


##### TTagVisitor Options #####

## How many articles do we want to read? It might happen that we read the same one again
## and again if we do not have enough articles available.
com.xceptance.xlt.samples.tests.TTagVisitor.article-read-count = 3

## How often should we page before we read articles?
com.xceptance.xlt.samples.tests.TTagVisitor.paging-count = 2

## Randomize
com.xceptance.xlt.samples.tests.TTagVisitor.randomize = true


##### TDateVisitor Options #####

## How many articles do we want to read? It might happen that we read the same one again
## and again if we do not have enough articles available.
com.xceptance.xlt.samples.tests.TDateVisitor.article-read-count = 3

## Randomize
com.xceptance.xlt.samples.tests.TDateVisitor.randomize = true


##### TSearchVisitor Options #####

## How many articles do we want to search for?
com.xceptance.xlt.samples.tests.TSearchVisitor.searches = 3

## How often should we page before we read articles?
com.xceptance.xlt.samples.tests.TSearchVisitor.paging-count = 2

## Randomize
com.xceptance.xlt.samples.tests.TSearchVisitor.randomize = true


##### TRSearchVisitor Options #####

## How many articles do we want to search for?
com.xceptance.xlt.rubysamples.tests.TSearchVisitor.searches = 3

## How often should we page before we read articles?
com.xceptance.xlt.rubysamples.tests.TSearchVisitor.paging-count = 2

## Randomize
com.xceptance.xlt.rubysamples.tests.TSearchVisitor.randomize = true


##### TUnpublish Options #####

## Our user name and password to log on.
com.xceptance.xlt.samples.tests.TUnpublish.username = username
com.xceptance.xlt.samples.tests.TUnpublish.password = password

## How many articles do we want to unpublish?
com.xceptance.xlt.samples.tests.TUnpublish.unpublish-count = 1


##### TXSSCrawler Options #####

## Specify how long the crawler should run (in min)
com.xceptance.xlt.samples.tests.TXSSCrawler.crawlerRuntime = 3

## Specify the maximum depth of recursion (0 = start page only)
com.xceptance.xlt.samples.tests.TXSSCrawler.depthOfRecursion = 2

## Indicators for duplicated urls - | separated
com.xceptance.xlt.samples.tests.TXSSCrawler.urlIndicators = 

## Exclude pattern - | separated
com.xceptance.xlt.samples.tests.TXSSCrawler.excludePatterns = 

## Include pattern - | separated
## this pattern will be added to host
com.xceptance.xlt.samples.tests.TXSSCrawler.includePatterns = 

## Whether to stop on external links
com.xceptance.xlt.samples.tests.TXSSCrawler.proceedExternals = false

## Specify pattern which should be found on each page
com.xceptance.xlt.samples.tests.TXSSCrawler.requiredText = 

## Specify pattern which aren't allowed on any page
com.xceptance.xlt.samples.tests.TXSSCrawler.disallowedText = 

## Specify how long the xss check should run (in min)
com.xceptance.xlt.samples.tests.TXSSCrawler.xssCheckRuntime = 1

## Attack strings - | separated  
com.xceptance.xlt.samples.tests.TXSSCrawler.attackStrings = ">XSS|<script>alert(document.cookie);</script>


##### TCrawler Options #####

## Specify how long the crawler should run (in min)
com.xceptance.xlt.samples.tests.TCrawler.crawlerRuntime = 3

## Specify the maximum depth of recursion (0 = start page only)
com.xceptance.xlt.samples.tests.TCrawler.depthOfRecursion = 5

## Indicators for duplicated urls - | separated
com.xceptance.xlt.samples.tests.TCrawler.urlIndicators =

## Exclude pattern - | separated
com.xceptance.xlt.samples.tests.TCrawler.excludePatterns = 

## Include pattern - | separated
## this pattern will be added to host
com.xceptance.xlt.samples.tests.TCrawler.includePatterns = 

## Whether to stop on external links
com.xceptance.xlt.samples.tests.TCrawler.proceedExternals = false

## Specify pattern which should be found on each page
com.xceptance.xlt.samples.tests.TCrawler.requiredText = 

## Specify pattern which aren't allowed on any page
com.xceptance.xlt.samples.tests.TCrawler.disallowedText = 

## Specify how long the xss check should run (in min)
com.xceptance.xlt.samples.tests.TCrawler.xssCheckRuntime = 5

## Attack strings - | separated  
com.xceptance.xlt.samples.tests.TCrawler.attackStrings = ">XSS|<script>alert(document.cookie);</script>


##### TRCrawler Options #####

## Specify how long the crawler should run (in min)
com.xceptance.xlt.rubysamples.tests.TCrawler.crawlerRuntime = 3

## Specify the maximum depth of recursion (0 = start page only)
com.xceptance.xlt.rubysamples.tests.TCrawler.depthOfRecursion = 5

## Indicators for duplicated urls - | separated
com.xceptance.xlt.rubysamples.tests.TCrawler.urlIndicators =

## Exclude pattern - | separated
com.xceptance.xlt.rubysamples.tests.TCrawler.excludePatterns = 

## Include pattern - | separated
## this pattern will be added to host
com.xceptance.xlt.rubysamples.tests.TCrawler.includePatterns = 

## Whether to stop on external links
com.xceptance.xlt.rubysamples.tests.TCrawler.proceedExternals = false

## Specify pattern which should be found on each page
com.xceptance.xlt.rubysamples.tests.TCrawler.requiredText = 

## Specify pattern which aren't allowed on any page
com.xceptance.xlt.rubysamples.tests.TCrawler.disallowedText = 

## Specify how long the xss check should run (in min)
com.xceptance.xlt.rubysamples.tests.TCrawler.xssCheckRuntime = 5

## Attack strings - | separated  
com.xceptance.xlt.rubysamples.tests.TCrawler.attackStrings = ">XSS|<script>alert(document.cookie);</script>


##### TSimpleURL Options #####

## Which url should be targeted?
com.xceptance.xlt.samples.tests.TSimpleURL.url = ${blog-url}

## How often should the url call be repeated? All subsequent calls get a different name
## in case the server has a session concept. This allows to see any differences that might
## occur.
com.xceptance.xlt.samples.tests.TSimpleURL.iterations = 10

# The xpath to get
com.xceptance.xlt.samples.tests.TSimpleURL.xpath = id('blogName')

# The content of the xpath to validate
com.xceptance.xlt.samples.tests.TSimpleURL.text = My blog

#com.xceptance.xlt.samples.tests.TSimpleURL.login = 
#com.xceptance.xlt.samples.tests.TSimpleURL.password =


##### TLWSimpleURL Options #####

## Which url should be targeted?
com.xceptance.xlt.samples.tests.TLWSimpleURL.url = ${blog-url}

## How often should the url call be repeated? All subsequent calls get a different name
## in case the server has a session concept. This allows to see any differences that might
## occur.
com.xceptance.xlt.samples.tests.TLWSimpleURL.iterations = 10

# The regexp to evaluate. The capturing group is used for the text 
# compare. Keep in mind, that things like dot-all and 
# multi-line support have to be included into the regexp.
com.xceptance.xlt.samples.tests.TLWSimpleURL.regexp = <div id="blogName"><span>([^<]+)</span></div>

# The content of the capturing group to be validated
com.xceptance.xlt.samples.tests.TLWSimpleURL.text = My blog

#com.xceptance.xlt.samples.tests.TLWSimpleURL.login = 
#com.xceptance.xlt.samples.tests.TLWSimpleURL.password =


################################################################################
#
# Project-Specific Report Generator Settings
#
# In order to reduce the list of requests in the report, the values of different
# requests can be merged together. You may specify one or more merge rules as
# outlined below:
#
#   com.xceptance.xlt.reportgenerator.requestMergeRules.<num>.<param> = <value>
#
# The rules are sorted numerically based on <num> and are applied in ascending
# order.
#
# The supported values for "<param>" are:
#
#   newName .............. the new request name (required)
#   namePattern .......... the reg-ex defining a matching request name
#   contentTypePattern ... the reg-ex defining a matching response content type
#   urlPattern ........... the reg-ex defining a matching request URL
#   stopOnMatch........... whether or not to process the next rule even if the 
#                          current rule applied (defaults to true)
#
# At least one of namePattern, contentTypePattern, or urlPattern must be
# specified. If more than one pattern is given, all given patterns must
# match.
#
# Note that "newName" may contain placeholders, which are replaced with the 
# specified capturing group from the respective pattern. The placeholder  
# format is as follows: {<category>:<capturingGroupIndex>}, where <category> is 
# one of "n" (for namePattern), "c" (for contentTypePattern), "s" (for 
# statusCodePattern), or "u" (for urlPattern) and <capturingGroupIndex> denotes 
# the respective capturing group in the selected pattern. 
#
################################################################################

## First, we eliminate the sub-request naming pattern, because we do not need
## that at the moment. This turns all "name.1" or "name.1.1" and so on into "name".
com.xceptance.xlt.reportgenerator.requestMergeRules.0.newName = {n:1}
com.xceptance.xlt.reportgenerator.requestMergeRules.0.namePattern = ^([^\\.]*)(\\.[0-9]+)+$
com.xceptance.xlt.reportgenerator.requestMergeRules.0.contentTypePattern =  
com.xceptance.xlt.reportgenerator.requestMergeRules.0.statusCodePattern =
com.xceptance.xlt.reportgenerator.requestMergeRules.0.urlPattern = 
com.xceptance.xlt.reportgenerator.requestMergeRules.0.stopOnMatch = false

## All requests with URLs ending with ".js" are grouped under "<name> JS".
com.xceptance.xlt.reportgenerator.requestMergeRules.1.newName = {n:0} JS
com.xceptance.xlt.reportgenerator.requestMergeRules.1.namePattern = [^.]+
com.xceptance.xlt.reportgenerator.requestMergeRules.1.contentTypePattern =
com.xceptance.xlt.reportgenerator.requestMergeRules.1.statusCodePattern =
com.xceptance.xlt.reportgenerator.requestMergeRules.1.urlPattern = \\.js$
com.xceptance.xlt.reportgenerator.requestMergeRules.1.stopOnMatch = false

## All requests with URLs ending with common image file extension are grouped
## under "<name> Images".
com.xceptance.xlt.reportgenerator.requestMergeRules.3.newName = {n:0} Images  
com.xceptance.xlt.reportgenerator.requestMergeRules.3.namePattern = [^.]+
com.xceptance.xlt.reportgenerator.requestMergeRules.3.contentTypePattern =   
com.xceptance.xlt.reportgenerator.requestMergeRules.3.statusCodePattern =
com.xceptance.xlt.reportgenerator.requestMergeRules.3.urlPattern = \\.(gif|png|jpg|ico)$
com.xceptance.xlt.reportgenerator.requestMergeRules.3.stopOnMatch = false

## All requests with URLs ending with ".css" are grouped under "<name> CSS".
com.xceptance.xlt.reportgenerator.requestMergeRules.5.newName = {n:0} CSS
com.xceptance.xlt.reportgenerator.requestMergeRules.5.namePattern = [^.]+
com.xceptance.xlt.reportgenerator.requestMergeRules.5.contentTypePattern =
com.xceptance.xlt.reportgenerator.requestMergeRules.5.statusCodePattern =
com.xceptance.xlt.reportgenerator.requestMergeRules.5.urlPattern = \\.css$
com.xceptance.xlt.reportgenerator.requestMergeRules.5.stopOnMatch = false

## Finally, append the response code to each request name. This way, statistics
## are calculated separately for each response code. So, fast 500 error 
## responses for instance will not influence the statistics for normal 200 
## responses.  
com.xceptance.xlt.reportgenerator.requestMergeRules.10.newName = {n:0} [{s:0}]  
com.xceptance.xlt.reportgenerator.requestMergeRules.10.namePattern = .*
com.xceptance.xlt.reportgenerator.requestMergeRules.10.contentTypePattern =  
com.xceptance.xlt.reportgenerator.requestMergeRules.10.statusCodePattern = [0-9]+
com.xceptance.xlt.reportgenerator.requestMergeRules.10.urlPattern = 
com.xceptance.xlt.reportgenerator.requestMergeRules.10.stopOnMatch = false
